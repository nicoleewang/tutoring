#!/usr/bin/python3
import sys
import psycopg2

db = 'uni'
conn = None

if len(sys.argv) != 3:
    print('Usage: course-roll subject term')
    sys.exit(1)

subject_code = sys.argv[1]
term = sys.argv[2]

# course_enrolment -> courses -> subjects
# course_enrolement -> students -> people
# courses -> terms

get_longname = 'select longname from subjects where code = %s'
check_term = 'select * from terms where code = %s'
# join subjects -> courses -> terms
check_offering_query = '''
    select * from subjects as s
    join courses as c on c.subject = s.id
    join terms as t on c.term = t.id
    where s.code = %s and t.code = %s
'''

student_in_course = '''
    select st.id, p.family, p.given
    from course_enrolments as ce
    join courses as c on ce.course = c.id
    join subjects as s on s.id = c.subject
    join students as st on ce.student = st.id 
    join people as p on p.id = st.id
    join terms as t on t.id = c.term
    where s.code = %s and t.code = %s
    order by p.family, p.given
'''

try:
    conn = psycopg2.connect(f"dbname={db}")
    cur = conn.cursor()

    # check for a valid subject
    cur.execute(get_longname, (subject_code,))
    longname = cur.fetchone()

    if not longname:
        print(f'Invalid subject {subject_code}')
        sys.exit(1)

    # check for a valid term
    cur.execute(check_term, (term,))
    if not cur.fetchone():
        print(f'invalid term {term}')
        sys.exit(1)

    # check for a valid offerring
    cur.execute(check_offering_query, (subject_code, term))
    if not cur.fetchone():
        print(f'No offering: {subject_code} {term}')
        sys.exit(1)

    
    print(subject_code, term, longname[0])

    cur.execute(student_in_course, (subject_code, term))
    students = cur.fetchall()


    if not students:
        print('No students')
    else:
        for student in students:
            print(f'{student[0]} {student[1]}, {student[2]}')

    cur.close()
except psycopg2.Error as err:
    print("database error: ", err)
finally:
    if conn is not None:
        conn.close()